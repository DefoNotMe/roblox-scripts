-- Enabled
Enabled = false
Reset = false
Click = false
MergeMastery = false
Upgrading = false
FarmMode = "Normal"
ResetTimer = 30
LastReset = tick()

-- Non-Synapse Users
if not pcall(function() return syn.protect_gui end) then
    syn = {}
    syn.protect_gui = function(egg)
        egg.Parent = game.CoreGui
    end
end

-- Variables
local vim = game:GetService("VirtualInputManager")
local player = game.Players.LocalPlayer

-- GUI Stuff
local play = player.PlayerGui.Game.PlayFrame
local main = play.Main
local data = player.DataFolder.Value
local stuff = main.Field.Objects
local clickMastery = play.ClickMastery.Click
local falling = player.PlayerGui.Game.FallingObjects

-- Prestige
local prestigeGui = play.GoldenCircles
local mayo = prestigeGui.Confirm.Prestige
local cap = prestigeGui.Confirm.Captcha.Main.Captcha
local capRemote = game.ReplicatedStorage.Events.Captcha

-- Merge Quest
local tier = data.Upgrades1["1"]
local questTier = data.MergeQuest.Tier

-- Upgrades
local better = main.CU["1"].Buy
local faster = main.CU["2"].Buy

-- Signal Waiter
function timeout(event, timeout)
	local signal = Instance.new("BindableEvent")
	local conn = nil
	conn = event:Connect(function(...)
		if (conn ~= nil) then
			conn:Disconnect()
			signal:Fire(...)
		end
	end)
	delay(timeout, function()
		if (conn ~= nil) then
			conn:Disconnect()
			conn = nil
			signal:Fire(nil)
		end
	end)
	return signal.Event:wait()
end

-- Get Match
function match(oop)
    local shit = data.Tiers:GetChildren()
    for i = 1, #shit do local v = shit[i]
        if not v:FindFirstChild("EGG") and v.Value == oop.Value and v ~= oop then
            Instance.new("Part",v).Name = "EGG"
            spawn(function()
                timeout(v.Changed,0.2)
                v:ClearAllChildren()
            end)
            return stuff[v.Name]
        end
    end
    return false
end

-- Click Function
function click(a)
    vim:SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,true,a,1)
    vim:SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,false,a,1)
end

-- Click Falling Objects
falling.ChildAdded:Connect(function(v)
    wait(3)
    if Enabled then
        local old = Click
        Click = false
        wait(.1)
        click(v)
        wait(.1)
        Click = old
    end
end)

-- UI Library
local library = loadstring(game:HttpGetAsync('https://pastebin.com/raw/edJT9EGX'))()
local window = library:CreateWindow("salad bowl")
window:AddLabel({text="discord.gg/uWAMYAgSTT"})
window:AddList({text='Mode',values={"Normal","Merge-Quest"},callback=function(a)FarmMode=a;end})
window:AddToggle({text='Merge Mastery Prestige',callback=function(a)MergeMastery=a;end})
window:AddToggle({text='Click Mastery',callback=function(a)Click=a;end})
window:AddBind({text='Auto-Merge Toggle',callback=function()
    Enabled = not Enabled
    LastReset = tick()
    clickMastery.Parent = Enabled and play or play.ClickMastery
end})
local presFolder = window:AddFolder("Auto Prestige")
presFolder:AddToggle({text='Enabled',callback=function(a)Reset=a;end})
presFolder:AddLabel({text="Timer to prestige"})
presFolder:AddSlider({text='Seconds',min=ResetTimer,max=ResetTimer*20,float=5,callback=function(a)ResetTimer=a;end})
library:Init()

-- Click Mastery
game:GetService("RunService").RenderStepped:Connect(function()
    if Enabled and Click and not Upgrading and #falling:GetChildren() == 2 then
        click(clickMastery)
    else
        warn(Enabled,Click,not Upgrading,#falling:GetChildren())
    end
end)

-- Prestige Check
function prestigeCheck(FORCED)
    if FORCED or Enabled and Reset and tick()-LastReset >= ResetTimer then
        if data.NumberValues.ResetsUntilCaptcha.Value == 0 then
            local captcha = cap.PlaceholderText:split('"')[2]
            for i = 1, #captcha do local v = captcha:sub(1,i)
                capRemote:FireServer(v)
                wait(.1)
            end
            wait(1)
        end
        prestigeGui.Visible = true
        prestigeGui.Confirm.Visible = true
        mayo.Visible = true
        wait(.1)
        click(mayo)
        LastReset = tick()
    end
end

-- Skeet
while true do
    -- Check if Enabled
    if Enabled then
        -- Faster Circles Upgrade
        if Enabled and faster.Price.TextColor3 ~= Color3.new(1,0,0) then
            Upgrading = true
            repeat
                click(faster)
                wait()
            until not Enabled or faster.Price.TextColor3 == Color3.new(1,0,0)
            Upgrading = false
        end
        -- Normal Farm
        if FarmMode == "Normal" then
            -- Better Circles Upgrade
            if Enabled and better.Price.TextColor3 ~= Color3.new(1,0,0) then
                Upgrading = true
                repeat
                    click(better)
                    wait()
                until not Enabled or better.Price.TextColor3 == Color3.new(1,0,0)
                Upgrading = false
            end
            -- Auto Prestige
            prestigeCheck()
        else -- Merge-Quest
            -- Check Tier
            if tier.Value > questTier.Value then
                prestigeCheck(true)
            elseif tier.Value < questTier.Value then
                -- Get To Correct Tier
                local mayo2 = main.CU["1"].Buy
                Upgrading = true
                repeat
                    -- Set Buy Amount
                    local amount = questTier.Value-tier.Value > 200 and 100 or questTier.Value-tier.Value > 20 and 10 or 1
                    if amount ~= player.BuyAmount.Value then
                        play.BuyAmount.Visible = true
                        play.Main.Visible = false
                        wait(.1)
                        click(play.BuyAmount.Set[amount])
                        timeout(player.BuyAmount.Changed,0.3)
                        play.BuyAmount.Visible = false
                        play.Main.Visible = true
                    end
                    -- Click
                    click(mayo2.Buy)
                    timeout(tier.Changed,0.2)
                until not Enabled or mayo2.Price.TextColor3 == Color3.new(1,0,0) or tier.Value >= questTier.Value
                Upgrading = false
            end
        end
        -- Auto Merge
        local femboy = data.Tiers:GetChildren()
        table.sort(femboy, function(a,b)
            return a.Value > b.Value 
        end)
        for i = 1, #femboy do local v = femboy[i]
            if Enabled and v.Value > 0 and not v:FindFirstChild("EGG") then
                local sex = match(v)
                local g = stuff[v.Name]
                if sex and g:FindFirstChild("Merge") then
                    -- Yes
                    Instance.new("Part",v).Name = "EGG"
                    spawn(function()
                        timeout(v.Changed,0.2)
                        v:ClearAllChildren()
                    end)
                    -- Merge
                    vim:SendMouseMoveEvent(sex.AbsolutePosition.X+sex.AbsoluteSize.X/2,sex.AbsolutePosition.Y+sex.AbsoluteSize.Y/2,game)
                    wait()
                    g.Merge:FireServer()
                    wait()
                    break
                end
            end
        end
        -- Merge Mastery Prestige
        if MergeMastery and data.MergeMastery.Level.Value >= 50 then
            Upgrading = true
            play.MergeMastery.Visible = true
            play.MergeMastery.Prestige.Unlocked.Prestige.Visible = true
            wait(.1)
            click(play.MergeMastery.Prestige.Unlocked.Prestige)
            wait(.1)
            play.MergeMastery.Visible = false
            play.MergeMastery.Prestige.Unlocked.Prestige.Visible = false
            Upgrading = false
        end
    end
    wait()
end
